/*==========================================================================  
 |   Source code:  PrimeSequence.java
 |        Author:  Dylan Sumler
 |    Student ID:  3538998  
 |    Assignment:  Assignment #5 - Prime Sequencer
 |  
 |        Course:  COP 3337 (Programming II) 
 |       Section:  U02  
 |    Instructor:  William Feild  
 |      Due Date:  28 March 2017, class time
 |
 |	I hereby certify that this collective work is my own
 |	and none of it is the work of any other person or entity.
 |	______________________________________ [Signature]
 |  
 |      Language:  Java 
 |   Compile/Run:  javac Sequence.java PrimeSequence.java SequenceDemo.java
 |                 java SequenceDemo int x int y
 |                 Where x is the number to start the prime sequence from
 |                 and y is the number of prime numbers to output.
 |                 
 | 
 |  +-----------------------------------------------------------------------  
 |  
 |  Description:  This class imlemepts the next() method in the sequence class
 |                and determines the next prime number after the integer
 |                provided as a parmeter for the constructor.
 |
 |        Input:  No input will be used for this class
 |  
 |       Output:  No output will be generated by this class
 |  
 |      Process:  A PrimeSequence object will be created using an integer
 |                number representing the start of the sequence. Next
 |                prime number after the start of the sequence will be 
 |                returned using the next method. Additionally, methods are
 |                provided to return and change the current number of the
 |                sequence
 |
 |                
 |  
 |   Required Features Not Included: All required features are included.
 |                 
 |  
 |   Known Bugs: None; the program operates as intended. 
 |  *======================================================================*/

package assignment5;

public class PrimeSequence implements Sequence {
   
   private final int BASE_VALUE = 2;   //lowest possible used to determine prime
   private int currentValue;           //current value of the sequence
   
   
   PrimeSequence(int SequenceValue){
      currentValue = SequenceValue;
   }
   
   /**
    * Determines the next prime number after the current prime number.
    * If the divisor multiplied by two is greater than the current number then
    * it is a prime number.
    * Otherwise, if the current number % the divisor is zero, increment the 
    * current number and reset the divisor because it is not prime.
    * Otherwise, increment the divisor until one of the other cases is true.
    * @return the next prime number.
    */
   @Override
   public int next(){
      boolean undetermined = true;
      int divisor = BASE_VALUE;
      currentValue++;
      
      do{
         if((divisor * BASE_VALUE) > currentValue){
            undetermined = false;
         }
         else if((currentValue % divisor) == 0){
            currentValue++;
            divisor = BASE_VALUE;
         }
         else
            divisor++;
      }while(undetermined);
      
      return currentValue;
   }
   
   /**
    * Retrieves the current value of the sequence.
    * @return the current value of the sequence
    */
   public int getCurrent(){
      return currentValue;
   }
   
   /**
    * Set the current value of the sequence.
    * @param newCurrent 
    */
   public void setCurrent(int newCurrent){
      currentValue = newCurrent;
   }
   
   
}
